    概念引入：设A是一个确定性算法，当它的输入实例为x时所需的计算时间记为tA(x)。设Xn是算法A的输入规模为n的实例的全体，则当问题的输
入规模为n时，算法A所需的平均时间为avg(tA(n))=∑tA(x)/|Xn|。这显然不能排除存在x∈Xn使得tA(x)>>avg(tA(n))的可能性。我们希望获得
一个随机化算法B，使得对问题的输入规模为n的每一个实例均有tB(x)=avg(tA(n))+s(n)。这就是舍伍德算法的基本思想。当s(n)与avg(tA(n))
相比可忽略时，舍伍德算法可获得很好的平均性能。
    舍伍德算法的精髓：舍伍德算法总能求得问题的一个正确解。当一个确定性算法在最坏情况下的计算复杂性与其在平均情况下的计算复杂性有较
大差别时，可在这个确定性算法中引入随机性将其改造成一个舍伍德算法，消除或减少问题的好坏实例之间的差别。舍伍德算法的精髓不是避免
算法的最坏情况行为，而是设法消除这种最坏行为与特定实例之间的关联性，比如在线性表a中查找元素10，如果在a[0]则为O(1)，如果是最后
一个则O(n)，可见时间与输入实例有关，此时可引入随机性将之改造成一个舍伍德算法。有时候无法直接把确定性算法改造为舍伍德算法，这时
候对输入进行随机洗牌，同样可以达到舍伍德算法的效果。